<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="User">

    <resultMap id="UserMap" type="User">
        <id column="id" property="id"/>
        <result column="name"  property="name" />
        <result column="age"  property="age" />
        <result column="mobile"  property="mobile" />
        <result column="email"  property="email" />
        <result column="created_at"  property="createdAt" />
        <result column="updated_at"  property="updatedAt" />
    </resultMap>

    <sql id="tb">
        user
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `name`,
        age,
        mobile,
        email,
        created_at,
        updated_at
    </sql>

    <sql id="vals">
        #{id},
        #{name},
        #{age},
        #{mobile},
        #{email},
        now(),
        now()
    </sql>

    <sql id="updateCondition">
        <set>
            <if test="name != null">`name` = #{name},</if>
            <if test="age != null">age = #{age},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="email != null">email = #{email},</if>
            updated_at = now()
        </set>
    </sql>

    <sql id="queryCondition">
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="name != null">AND `name` = #{name}</if>
            <if test="age != null">AND age = #{age}</if>
            <if test="mobile != null">AND mobile = #{mobile}</if>
            <if test="email != null">AND email = #{email}</if>
        </where>
    </sql>

    <sql id="custom_sort_type">
        <if test="sortType != null">
            <if test="sortType == 1">ASC</if>
            <if test="sortType == 2">DESC</if>
        </if>
    </sql>

    <sql id="custom_sort">
        <if test="sortBy != null">
            <if test="sortBy == 'id'">ORDER BY id
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'name'">ORDER BY `name`
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'age'">ORDER BY age
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'mobile'">ORDER BY mobile
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'email'">ORDER BY email
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'createdAt'">ORDER BY created_at
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'updatedAt'">ORDER BY updated_at
                <include refid="custom_sort_type"/>
            </if>
        </if>
    </sql>

    <insert id="create" parameterType="User" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            (
            #{i.name},
            #{i.age},
            #{i.mobile},
            #{i.email},
            now(),
            now()
            )
        </foreach>
    </insert>

    <select id="load" parameterType="long" resultMap="UserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="loads" parameterType="list" resultMap="UserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="User">
        UPDATE
        <include refid="tb"/>
        <include refid="updateCondition"/>
        WHERE id = #{id}
    </update>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="tb"/>
        <include refid="queryCondition"/>
    </select>

    <select id="paging" parameterType="map" resultMap="UserMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="queryCondition"/>
        <include refid="custom_sort"/>
        LIMIT #{offset}, #{limit}
    </select>

</mapper>
